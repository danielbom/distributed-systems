package examples;import java.io.EOFException;import java.io.IOException;/** * TCPServer: Servidor para conexao TCP com Threads Descricao: Recebe uma * conexao, cria uma thread, recebe uma mensagem e finaliza a conexao */import java.net.ServerSocket;import java.net.Socket;import java.util.ArrayList;public class TCPServer {	public static void main(String args[]) throws IOException {		ServerSocket listenSocket = null;		try {			int serverPort = 6666; // porta do servidor			/* cria um socket e mapeia a porta para aguardar conexao */			listenSocket = new ServerSocket(serverPort);			System.out.println("Servidor aguardando conexao ...");			/* aguarda conexoes */			Socket clientSocket = listenSocket.accept(); // PRINTA			System.out.println("Cliente conectado ... Criando thread ...");			/* cria um thread para atender a conexao */			new ClientThread(clientSocket).start();		} catch (IOException e) {			System.out.println("Listen socket:" + e.getMessage());		} finally {			listenSocket.close();		}	}}/** * Classe ClientThread: Thread responsavel pela comunicacao Descricao: Rebebe um * socket, cria os objetos de leitura e escrita, aguarda msgs clientes e * responde com a msg + :OK */class ClientThread extends Thread {	Socket clientSocket;	public ClientThread(Socket clientSocket) {		this.clientSocket = clientSocket;	}	@Override	public void run() {		ArrayList<Thread> threads = new ArrayList<Thread>(2);		try {			threads.add(new Thread(new Sender(clientSocket)));			threads.add(new Thread(new Receiver(clientSocket)));			threads.forEach(t -> {				t.setDaemon(true);				t.start();			});						boolean running = true;			while (running) {				Thread.sleep(200);				for (Thread t : threads)					if (!t.isAlive())						running = false;			}		} catch (EOFException eofe) {			System.out.println("EOF: " + eofe.getMessage());		} catch (IOException ioe) {			System.out.println("IOE: " + ioe.getMessage());		} catch (InterruptedException ie) {			System.out.println("IE: " + ie.getMessage());		} finally {			try {				clientSocket.close();			} catch (IOException ioe) {				System.err.println("IOE: " + ioe);			}		}		System.out.println("Thread comunicação cliente finalizada.");	}}